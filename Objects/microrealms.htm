<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\microrealms.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\microrealms.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140002: Last Updated: Mon Feb 28 12:07:57 2022
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; runGame &rArr; step &rArr; doChallenge &rArr; printDecimal &rArr; eputs
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[16]">I2C1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[12]">LPTIM1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[19]">LPUART1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from realm.o(.text.SysTick_Handler) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1a]">SystemInit</a> from system_stm32l0xx.o(.text.SystemInit) referenced from startup_stm32l031xx.o(.text)
 <LI><a href="#[14]">TIM21_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[15]">TIM22_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[13]">TIM2_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[18]">USART2_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l031xx.o(.text) referenced from startup_stm32l031xx.o(RESET)
 <LI><a href="#[1b]">__main</a> from __main.o(!!!main) referenced from startup_stm32l031xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[50]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[20]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[51]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[24]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[52]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[53]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[54]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[55]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[56]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[57]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[58]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[59]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[5a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[5b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[5c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[5d]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[60]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[61]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[62]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[63]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[64]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[65]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[66]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[29]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[67]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[68]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[69]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[6a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[6b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[6c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[6d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[6e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[21]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[23]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[6f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[25]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; runGame &rArr; step &rArr; doChallenge &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[28]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[71]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[2a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l031xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32l031xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[72]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[27]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[75]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[76]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[77]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>ADCBegin</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, realm.o(.text.ADCBegin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADCBegin
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomize
</UL>

<P><STRONG><a name="[4a]"></a>ADCRead</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, realm.o(.text.ADCRead))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomize
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, realm.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, system_stm32l0xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l031xx.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>addWeapon</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, realm.o(.text.addWeapon))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = addWeapon &rArr; showPlayer &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUserInput
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDecimal
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
</UL>

<P><STRONG><a name="[4d]"></a>delay</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, stm32l031lib.o(.text.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[37]"></a>doChallenge</STRONG> (Thumb, 720 bytes, Stack size 32 bytes, realm.o(.text.doChallenge))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = doChallenge &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showGameMessage
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setStrength
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHealth
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWeaponName
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUserInput
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDecimal
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
</UL>

<P><STRONG><a name="[3d]"></a>egetchar</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32l031lib.o(.text.egetchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = egetchar
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getButtonState
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUserInput
</UL>

<P><STRONG><a name="[40]"></a>enablePullUp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l031lib.o(.text.enablePullUp))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initButtons
</UL>

<P><STRONG><a name="[36]"></a>eputchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l031lib.o(.text.eputchar))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showRealm
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>

<P><STRONG><a name="[32]"></a>eputs</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l031lib.o(.text.eputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showRealm
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showHelp
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showGameMessage
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDecimal
</UL>

<P><STRONG><a name="[3e]"></a>getButtonState</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32l031lib.o(.text.getButtonState))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;egetchar
</UL>

<P><STRONG><a name="[35]"></a>getUserInput</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, realm.o(.text.getUserInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getUserInput &rArr; egetchar
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;egetchar
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[38]"></a>getWeaponName</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, realm.o(.text.getWeaponName))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
</UL>

<P><STRONG><a name="[3f]"></a>initButtons</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, stm32l031lib.o(.text.initButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = initButtons
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enablePullUp
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSerial
</UL>

<P><STRONG><a name="[44]"></a>initClock</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32l031lib.o(.text.initClock))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSerial
</UL>

<P><STRONG><a name="[41]"></a>initPlayer</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, realm.o(.text.initPlayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initPlayer &rArr; getUserInput &rArr; egetchar
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHealth
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUserInput
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[42]"></a>initRealm</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, realm.o(.text.initRealm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initRealm &rArr; random
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[43]"></a>initSerial</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32l031lib.o(.text.initSerial))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initSerial &rArr; initButtons
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; runGame &rArr; step &rArr; doChallenge &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSerial
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[30]"></a>pinMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l031lib.o(.text.pinMode))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCBegin
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initSerial
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initButtons
</UL>

<P><STRONG><a name="[46]"></a>playNote</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, realm.o(.text.playNote))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = playNote
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[48]"></a>prbs</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, realm.o(.text.prbs))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
</UL>

<P><STRONG><a name="[33]"></a>printDecimal</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, stm32l031lib.o(.text.printDecimal))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
</UL>

<P><STRONG><a name="[39]"></a>random</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, realm.o(.text.random))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = random
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prbs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRealm
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
</UL>

<P><STRONG><a name="[49]"></a>randomize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, realm.o(.text.randomize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = randomize &rArr; ADCBegin
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCRead
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCBegin
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[45]"></a>runGame</STRONG> (Thumb, 496 bytes, Stack size 0 bytes, realm.o(.text.runGame))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = runGame &rArr; step &rArr; doChallenge &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showRealm
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showHelp
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showGameMessage
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;randomize
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playNote
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRealm
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUserInput
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>setHealth</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, realm.o(.text.setHealth))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initPlayer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
</UL>

<P><STRONG><a name="[3a]"></a>setStrength</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, realm.o(.text.setStrength))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
</UL>

<P><STRONG><a name="[3c]"></a>showGameMessage</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, realm.o(.text.showGameMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = showGameMessage &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[4b]"></a>showHelp</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, realm.o(.text.showHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = showHelp &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[34]"></a>showPlayer</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, realm.o(.text.showPlayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = showPlayer &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getWeaponName
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDecimal
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[4c]"></a>showRealm</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, realm.o(.text.showRealm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = showRealm &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputchar
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[4e]"></a>step</STRONG> (Thumb, 516 bytes, Stack size 24 bytes, realm.o(.text.step))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = step &rArr; doChallenge &rArr; printDecimal &rArr; eputs
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showRealm
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showPlayer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showGameMessage
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setStrength
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setHealth
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRealm
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doChallenge
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addWeapon
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eputs
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runGame
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_uidiv</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, aeabi_sdivfast.o(.text_divfast))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playNote
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDecimal
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_idiv</STRONG> (Thumb, 434 bytes, Stack size 8 bytes, aeabi_sdivfast.o(.text_divfast), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
